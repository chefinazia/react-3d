{"version":3,"sources":["assests/textures/8k_earth_daymap.jpg","assests/textures/8k_earth_clouds.jpg","assests/textures/8k_earth_specular_map.jpg","assests/textures/8k_earth_nightmap.jpg","assests/textures/8k_earth_normal_map.jpg","components/earth/index.js","App.js","reportWebVitals.js","index.js"],"names":["Earth","props","useLoader","TextureLoader","EarthDayMap","EarthNormarlMap","EarthSpecularMap","EarthCloudsMap","colorMap","normalMap","specularMap","cloudsMap","intensity","Stars","radius","depth","count","factor","saturation","fade","args","map","opacity","depthWrite","transparent","side","THREE","OrbitControls","enableZoom","enablePan","enableRotate","zoomSpeed","panSpeed","rotateSpeed","CanvasContainer","styled","div","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAAe,MAA0B,4CCA1B,MAA0B,4CCA1B,GCAA,IDAA,IAA0B,mDEA1B,MAA0B,gD,+BCgC1BA,I,EAAAA,EArBf,SAAeC,GAEX,MAAiDC,YAAUC,gBAAc,CAACC,EAAYC,EAAgBC,EAAiBC,IAAvH,mBAAOC,EAAP,KAAgBC,EAAhB,KAA0BC,EAA1B,KAAsCC,EAAtC,KACA,OACI,qCACI,8BAAcC,UAAU,MACxB,cAACC,EAAA,EAAD,CAAOC,OAAQ,IAAKC,MAAO,GAAIC,MAAO,IAAMC,OAAQ,EAAGC,WAAY,EAAGC,MAAM,IAC5E,iCACI,gCAAiBC,KAAM,CAAC,MAAM,GAAG,MACjC,mCAAmBC,IAAKV,EAAWW,QAAS,GAAKC,YAAY,EAAMC,aAAa,EAAMC,KAAMC,kBAEhG,iCACI,gCAAgBN,KAAM,CAAC,EAAE,GAAG,MAC5B,mCAAmBV,YAAaA,IAChC,sCAAsBW,IAAKb,EAAUC,UAAWA,IAChD,cAACkB,EAAA,EAAD,CAAeC,YAAY,EAAMC,WAAW,EAAMC,cAAc,EAAMC,UAAW,GAAKC,SAAU,GAAKC,YAAa,YCrB5HC,EAAgBC,IAAOC,IAAR,6DAgBNC,MAZf,WACE,OACI,cAACH,EAAD,UACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUI,SAAU,KAApB,SACE,cAAC,EAAD,WCFGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.da3c02a0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/8k_earth_daymap.54672c1f.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_clouds.08fcd800.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_specular_map.7b4efa59.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_nightmap.c0e138e9.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_normal_map.930cf2e9.jpg\";","import React from 'react'\r\nimport EarthDayMap from '../../assests/textures/8k_earth_daymap.jpg';\r\nimport EarthCloudsMap from '../../assests/textures/8k_earth_clouds.jpg';\r\nimport EarthNightMap from '../../assests/textures/8k_earth_nightmap.jpg';\r\nimport EarthSpecularMap from '../../assests/textures/8k_earth_specular_map.jpg';\r\nimport EarthNormarlMap from '../../assests/textures/8k_earth_normal_map.jpg';\r\nimport { useLoader } from '@react-three/fiber';\r\nimport { TextureLoader } from 'three';\r\nimport {OrbitControls,Stars} from '@react-three/drei'\r\nimport * as THREE from 'three';\r\n\r\nfunction Earth(props) {\r\n\r\n    const [colorMap,normalMap,specularMap,cloudsMap]=useLoader(TextureLoader,[EarthDayMap,EarthNormarlMap,EarthSpecularMap,EarthCloudsMap])\r\n    return (\r\n        <>\r\n            <ambientLight intensity='1'/>\r\n            <Stars radius={300} depth={60} count={2000} factor={7} saturation={0} fade={true}/>\r\n            <mesh>\r\n                <sphereGeometry  args={[1.005,32,32]}/>\r\n                <meshPhongMaterial map={cloudsMap} opacity={0.4} depthWrite={true} transparent={true} side={THREE.DoubleSide} />\r\n            </mesh>\r\n            <mesh>\r\n                <sphereGeometry args={[1,32,32]}/>\r\n                <meshPhongMaterial specularMap={specularMap}></meshPhongMaterial>\r\n                <meshStandardMaterial map={colorMap} normalMap={normalMap}/>\r\n                <OrbitControls enableZoom={true} enablePan={true} enableRotate={true} zoomSpeed={0.6} panSpeed={0.5} rotateSpeed={0.4} />\r\n            </mesh>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Earth\r\n","import './App.css';\nimport {Canvas} from '@react-three/fiber';\nimport styled from 'styled-components'\nimport { Suspense } from 'react';\nimport Earth from './components/earth';\nconst CanvasContainer=styled.div`\n  width: 100%;\n  height: 100%;\n`;\nfunction App() {\n  return (\n      <CanvasContainer>\n        <Canvas>\n          <Suspense fallback={null}>\n            <Earth/>\n          </Suspense>\n        </Canvas>\n      </CanvasContainer>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}